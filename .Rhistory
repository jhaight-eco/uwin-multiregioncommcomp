se = FALSE, lwd = 1.2, color = "gray20") +
geom_smooth(data = data.plot, aes(x = impervious, y = sd_med, group = city, color = MAT),
se = FALSE) +
geom_ribbon(data = data.plot, aes(x = impervious, y = sd_med, group = city, ymin = sd_low95, ymax = sd_upp95, fill = MAT),
alpha = 0.15) +
#gghighlight(city %in% c("scut", "mela"))+
scale_fill_distiller(palette = "RdYlBu", direction = -1)+
scale_color_distiller(palette = "RdYlBu", direction = -1)+
scale_y_continuous(labels = label_number(accuracy = 0.1)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,11.5))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Diversity")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")  #top, right, bottom, left
)
plot.sd
range(data.plot$MAT)
ggsave("./figures/figure2f_urbanization_vs_richness_MATcontrast.png",
plot.sr,
width = 4,
height = 4,
units = "in",
dpi = 300)
ggsave("./figures/figure2j_urbanization_vs_diversity_MATcontrast.png",
plot.sd,
width = 4,
height = 4,
units = "in",
dpi = 300)
# Plot Relationships Across Regional URB Gradient ====
# This is a little trickier to see, as there wasn't a substantial relationship
# But, two cities with low URB (Salt Lake) and high URB (Chicago), but similar other covariates
data.plot <- preds.urbURB
plot.sr <- ggplot() +
theme_bw() +
geom_smooth(data = data.plot, aes(x = impervious, y = sr_med, group = city),
se = FALSE, lwd = 1.2, color = "gray20") +
geom_smooth(data = data.plot, aes(x = impervious, y = sr_med, group = city, color = URB),
se = FALSE) +
geom_ribbon(data = data.plot, aes(x = impervious, y = sr_med, group = city, ymin = sr_low95, ymax = sr_upp95, fill = URB),
alpha = 0.15) +
#gghighlight(city %in% c("scut", "chil"))+
scale_fill_distiller(palette = "PuOr", direction = 1)+
scale_color_distiller(palette = "PuOr", direction = 1)+
scale_y_continuous(labels = label_number(accuracy = 0.1)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,11.5))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")  #top, right, bottom, left
)
plot.sd <- ggplot() +
theme_bw() +
geom_smooth(data = data.plot, aes(x = impervious, y = sd_med, group = city),
se = FALSE, lwd = 1.2, color = "gray20") +
geom_smooth(data = data.plot, aes(x = impervious, y = sd_med, group = city, color = URB),
se = FALSE) +
geom_ribbon(data = data.plot, aes(x = impervious, y = sd_med, group = city, ymin = sd_low95, ymax = sd_upp95, fill = URB),
alpha = 0.15) +
#gghighlight(city %in% c("scut", "chil"))+
scale_fill_distiller(palette = "PuOr", direction = 1)+
scale_color_distiller(palette = "PuOr", direction = 1)+
scale_y_continuous(labels = label_number(accuracy = 0.1)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,11.5))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Diversity")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")  #top, right, bottom, left
)
range(data.plot$URB)
plot.sr
plot.sd
ggsave("./figures/figure2g_urbanization_vs_richness_URBcontrast.png",
plot.sr,
width = 4,
height = 4,
units = "in",
dpi = 300)
ggsave("./figures/figure2k_urbanization_vs_diversity_URBcontrast.png",
plot.sd,
width = 4,
height = 4,
units = "in",
dpi = 300)
# Plot Relationships Across Regional AGE Gradient ====
# Again, not a substantial difference, even for the two cities that should have a maximum contrast
# Newer city (Indianapolis) and older city (Wilmington) have similar EVI, MAT (though Indianapolis is slighly more urbanized)
# there are cities with larger age differences, but they end up having very different EVI and MAT as well
data.plot <- preds.urbAGE
plot.sr <- ggplot() +
theme_bw() +
geom_smooth(data = data.plot, aes(x = impervious, y = sr_med, group = city),
se = FALSE, lwd = 1.2, color = "gray20") +
geom_smooth(data = data.plot, aes(x = impervious, y = sr_med, group = city, color = AGE),
se = FALSE) +
geom_ribbon(data = data.plot, aes(x = impervious, y = sr_med, group = city, ymin = sr_low95, ymax = sr_upp95, fill = AGE),
alpha = 0.15) +
#gghighlight(city %in% c("inin", "wide"))+
scale_fill_distiller(palette = "PRGn", direction = -1)+
scale_color_distiller(palette = "PRGn", direction = -1)+
scale_y_continuous(labels = label_number(accuracy = 0.1)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,11.5))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")  #top, right, bottom, left
)
plot.sd <- ggplot() +
theme_bw() +
geom_smooth(data = data.plot, aes(x = impervious, y = sd_med, group = city),
se = FALSE, lwd = 1.2, color = "gray20") +
geom_smooth(data = data.plot, aes(x = impervious, y = sd_med, group = city, color = AGE),
se = FALSE) +
geom_ribbon(data = data.plot, aes(x = impervious, y = sd_med, group = city, ymin = sd_low95, ymax = sd_upp95, fill = AGE),
alpha = 0.15) +
#gghighlight(city %in% c("inin", "wide"))+
scale_fill_distiller(palette = "PRGn", direction = -1)+
scale_color_distiller(palette = "PRGn", direction = -1)+
scale_y_continuous(labels = label_number(accuracy = 0.1)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,11.5))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Diversity")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")  #top, right, bottom, left
)
range(data.plot$AGE)
plot.sr
plot.sd
ggsave("./figures/figure2h_urbanization_vs_richness_AGEcontrast.png",
plot.sr,
width = 4,
height = 4,
units = "in",
dpi = 300)
ggsave("./figures/figure2l_urbanization_vs_diversity_AGEcontrast.png",
plot.sd,
width = 4,
height = 4,
units = "in",
dpi = 300)
#### Setup ####
rm(list=ls()) # clear the environment
gc()
set.seed(123)  # needs to be set in order for the points and error bars to 'jitter' the same
# Set working directory
#setwd("YourFilePathHere")
# e.g.,
setwd("C:/Users/User/Documents/GitHub/uwin-multiregioncommcomp")
# Load necessary packages
library(dplyr)
library(reshape2)
library(ggplot2)
library(peRReo)   # https://github.com/jbgb13/peRReo
library(png)
library(scales)
# Define color palette for figures
calle <-  latin_palette("calle13", 9)
##### Import Data #####
# The main datasets containing all the site and regional covariates
data.site <- read.csv("./data/modelsummary/data_sites_mrcmsummary.csv")
data.reg <- read.csv("./data/modelsummary/data_cities_mrcmsummary.csv")
data.spp <- read.csv("./data/modelinput/ModelInputData_UWIN_allspecies.csv")
# object output from the 'jags()' function in the 'jagsUI' package
# the original model file itself was unfortunately too large to upload to the data repository
# this file can be reproduced by running the code in the '1_1_Analysis_FittingMultiRegionCommunityModel.R' script
out <- readRDS("C:/Research/urban/UWIN/analysis_MRCM/data/6_output/model1output_mrcm_globalinteractionmodel_sample60k.rds")
# out$summary
# for plotting purposes, some parameters may need to be recalculated, depending on which were monitored in the original model
# e.g. the city-average occupancy intercept, from which the city- and species-specific intercept phi0 was estimated
mu.phi0 <- apply(out$sims.list$phi0, c(1,2), function(x)   mean(x, na.rm=TRUE))
# objects for prediction
tmp <- out$sims.list  # grab mcmc samples
npred <- 200          # number of values to predict
nsamp <- length(tmp[[1]])
# Figure 2: Urbanization vs. Occupancy for Contrasting Cities ----
cities <- data.reg$city
# community-average slopes
mcmc.mu.beta <- cbind(tmp$mu.beta0,
tmp$mu.beta1.s1,
tmp$mu.beta2.s2,
tmp$mu.beta3.s3,
tmp$mu.beta4.r,
tmp$mu.beta5.s1r,
tmp$mu.beta6.r,
tmp$mu.beta7.s1r,
tmp$mu.beta8.r,
tmp$mu.beta9.s1r,
tmp$mu.beta10.r,
tmp$mu.beta11.s1r
)
data.reg <- data.reg %>% arrange(city)
# Objects for storing values from the loops below
# Values of local, within-city covariates to predict off of. These were standardized by city
# One option is to show relationships within specific cities, using their real values
# using range of hypothetical values equivalent to their actual gradient of urbanization, patch density, and agriculture
#urb.pred <- array(NA, dim = c(npred, nrow(data.reg)))
#pd.pred <- array(NA, dim = c(npred, nrow(data.reg)))
#ag.pred <- array(NA, dim = c(npred, nrow(data.reg)))
#impervious <- array(NA, dim = c(npred, nrow(data.reg)))
#for(r in 1:nrow(data.reg)){
#  data.city <- data.site %>% filter(city == data.reg$city[r])
#  urb.pred[,r] <- seq(min(data.city$imperv_std),
#                      max(data.city$imperv_std), length.out = npred)
#  pd.pred[,r] <- seq(min(data.city$pd_undev_std),
#                     max(data.city$pd_undev_std), length.out = npred)
#
#  ag.pred[,r] <- seq(min(data.city$cropland_std),
#                     max(data.city$cropland_std), length.out = npred)
# non-standardized values of urbanization
#  impervious[,r] <- seq(min(data.city$Impervious),
#                        max(data.city$Impervious), length.out = npred)
#}
# However, to more effectively highlight the statistical effects modeld in the multi-city community occupancy model
# we will predict effects across a range of hypothetical local urbanization values, under contrasting ranges of regional variables
# for each regional variable, we will hold all other regional and local variables constant at their mean (zero)
#nline <- nrow(data.reg)
nline <- 5
city.num <- paste("city", 1:nline, sep = "")
urban.pred <- seq(min(data.site$imperv_std), max(data.site$imperv_std), length.out = npred)
pd.pred <- seq(min(data.site$pd_undev_std), max(data.site$pd_undev_std), length.out = npred)
ag.pred <- seq(min(data.site$cropland_std), max(data.site$cropland_std), length.out = npred)
# predicting across moderate ranges of regional variables (excluding unrealistic combinations of greenness and temperature)
data.reg %>% select(city, EVI_av, mat_av, urb_reg, yrs_col)
pred.EVI <- seq((0.2-mean(data.reg$EVI_av))/sd(data.reg$EVI_av), (0.29-mean(data.reg$EVI_av))/sd(data.reg$EVI_av), length.out = nline)
pred.MAT <- seq((10-mean(data.reg$mat_av))/sd(data.reg$mat_av), (15-mean(data.reg$mat_av))/sd(data.reg$mat_av), length.out = nline) # from 10 to 15 degrees
pred.URB <- seq((0.4-mean(data.reg$urb_reg))/sd(data.reg$urb_reg), (0.8-mean(data.reg$urb_reg))/sd(data.reg$urb_reg), length.out = nline)
pred.AGE <- seq((150-mean(data.reg$yrs_col))/sd(data.reg$yrs_col), (250-mean(data.reg$yrs_col))/sd(data.reg$yrs_col), length.out = nline)
# predicting across ranges that includes the extreme values (not as realistic)
#pred.EVI <- seq(min(data.reg$EVI_av_std), max(data.reg$EVI_av_std), length.out = nline)
#pred.MAT <- seq(min(data.reg$mat_av_std), max(data.reg$mat_av_std), length.out = nline)
#pred.URB <- seq(min(data.reg$urb_reg_std), max(data.reg$urb_reg_std), length.out = nline)
#pred.AGE <- seq(min(data.reg$yrs_col_std), max(data.reg$yrs_col_std), length.out = nline)
# objects for storing prediction summary stats
preds.psicomm.mean <- rep(NA, npred*nline)
preds.psicomm.med <- rep(NA, npred*nline)
preds.psicomm.2.5 <- rep(NA, npred*nline)
preds.psicomm.97.5 <- rep(NA, npred*nline)
# predict across EVI gradient
for(r in 1:nline){  # loop for each city
# a design matrix that is remade for each city, using their specific regional covariate values
dm.urb <- cbind(
1,
urban.pred,  # local urbanization
0,   # patch density
0,   # agriculture
pred.EVI[r],  # EVI
pred.EVI[r]*urban.pred,  # EVI*local urbanization
0, #pred.MAT[r],  # MAT
0, #pred.MAT[r]*urb.pred,  # MAT*local urbanization
0, #pred.URB[r],  # URB
0, #pred.URB[r]*urb.pred,  # URB*local urbanization
0, #pred.AGE[r],  # AGE
0  #pred.AGE[r]*urb.pred   # AGE*local urbanization
)
preds.psicomm.city <- plogis(mcmc.mu.beta %*% t(dm.urb))  # predict
preds.psicomm.cri <- apply(preds.psicomm.city, 2, quantile, probs = c(0.025,0.5,0.975)) %>% t() %>% data.frame()
preds.psicomm.mean[(r*npred-npred+1):(r*npred)] <- apply(preds.psicomm.city, c(2), function(x)   mean(x, na.rm=TRUE))    # posterior mean
preds.psicomm.2.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,1]
preds.psicomm.med[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,2]
preds.psicomm.97.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,3]
#print(data.reg$city[r])
print(city.num[r])
}
preds.urbEVI <- data.frame(
"impervious" = rep(seq(min(data.site$Impervious), max(data.site$Impervious), length.out = npred), nline),
"impervious_std" = rep(urban.pred, nline),
"city" = rep(c(city.num), each = npred),
#"EVI" = rep(data.reg$EVI_av, each = npred),
"EVI" = rep((pred.EVI*sd(data.reg$EVI_av)+mean(data.reg$EVI_av)), each = npred),
"psi_med" = preds.psicomm.med,
"psi_low95" = preds.psicomm.2.5,
"psi_upp95" = preds.psicomm.97.5
)
# repeat predictions for other regional variables
# MAT
for(r in 1:nline){  # loop for each city
# a design matrix that is remade for each city, using their specific regional covariate values
dm.urb <- cbind(
1,
urban.pred,  # local urbanization
0,   # patch density
0,   # agriculture
0, #pred.EVI[r],  # EVI
0, #pred.EVI[r]*urban.pred,  # EVI*local urbanization
pred.MAT[r],  # MAT
pred.MAT[r]*urban.pred,  # MAT*local urbanization
0, #pred.URB[r],  # URB
0, #pred.URB[r]*urban.pred,  # URB*local urbanization
0, #pred.AGE[r],  # AGE
0  #pred.AGE[r]*urban.pred   # AGE*local urbanization
)
preds.psicomm.city <- plogis(mcmc.mu.beta %*% t(dm.urb))  # predict
preds.psicomm.cri <- apply(preds.psicomm.city, 2, quantile, probs = c(0.025,0.5,0.975)) %>% t() %>% data.frame()
preds.psicomm.mean[(r*npred-npred+1):(r*npred)] <- apply(preds.psicomm.city, c(2), function(x)   mean(x, na.rm=TRUE))    # posterior mean
preds.psicomm.2.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,1]
preds.psicomm.med[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,2]
preds.psicomm.97.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,3]
#print(data.reg$city[r])
print(city.num[r])
}
preds.urbMAT <- data.frame(
"impervious" = rep(seq(min(data.site$Impervious), max(data.site$Impervious), length.out = npred), nline),
"impervious_std" = rep(urban.pred, nline),
"city" = rep(c(city.num), each = npred),
#"MAT" = rep(data.reg$mat_av, each = npred),
"MAT" = rep((pred.MAT*sd(data.reg$mat_av)+mean(data.reg$mat_av)), each = npred),
"psi_med" = preds.psicomm.med,
"psi_low95" = preds.psicomm.2.5,
"psi_upp95" = preds.psicomm.97.5
)
# URB
for(r in 1:nline){  # loop for each city
# a design matrix that is remade for each city, using their specific regional covariate values
dm.urb <- cbind(
1,
urban.pred,  # local urbanization
0,   # patch density
0,   # agriculture
0, #pred.EVI[r],  # EVI
0, #pred.EVI[r]*urban.pred,  # EVI*local urbanization
0, #pred.MAT[r],  # MAT
0, #pred.MAT[r]*urban.pred,  # MAT*local urbanization
pred.URB[r],  # URB
pred.URB[r]*urban.pred,  # URB*local urbanization
0, #pred.AGE[r],  # AGE
0  #pred.AGE[r]*urban.pred   # AGE*local urbanization
)
preds.psicomm.city <- plogis(mcmc.mu.beta %*% t(dm.urb))  # predict
preds.psicomm.cri <- apply(preds.psicomm.city, 2, quantile, probs = c(0.025,0.5,0.975)) %>% t() %>% data.frame()
preds.psicomm.mean[(r*npred-npred+1):(r*npred)] <- apply(preds.psicomm.city, c(2), function(x)   mean(x, na.rm=TRUE))    # posterior mean
preds.psicomm.2.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,1]
preds.psicomm.med[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,2]
preds.psicomm.97.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,3]
#print(data.reg$city[r])
print(city.num[r])
}
preds.urbURB <- data.frame(
"impervious" = rep(seq(min(data.site$Impervious), max(data.site$Impervious), length.out = npred), nline),
"impervious_std" = rep(urban.pred, nline),
"city" = rep(c(city.num), each = npred),
#"URB" = rep(data.reg$urb_reg, each = npred),
"URB" = rep((pred.URB*sd(data.reg$urb_reg)+mean(data.reg$urb_reg)), each = npred),
"psi_med" = preds.psicomm.med,
"psi_low95" = preds.psicomm.2.5,
"psi_upp95" = preds.psicomm.97.5
)
# AGE
for(r in 1:nline){  # loop for each city
# a design matrix that is remade for each city, using their specific regional covariate values
dm.urb <- cbind(
1,
urban.pred,  # local urbanization
0,   # patch density
0,   # agriculture
0, #pred.EVI[r],  # EVI
0, #pred.EVI[r]*urban.pred,  # EVI*local urbanization
0, #pred.MAT[r],  # MAT
0, #pred.MAT[r]*urban.pred,  # MAT*local urbanization
0, #pred.URB[r],  # URB
0, #pred.URB[r]*urban.pred,  # URB*local urbanization
pred.AGE[r],  # AGE
pred.AGE[r]*urban.pred   # AGE*local urbanization
)
preds.psicomm.city <- plogis(mcmc.mu.beta %*% t(dm.urb))  # predict
preds.psicomm.cri <- apply(preds.psicomm.city, 2, quantile, probs = c(0.025,0.5,0.975)) %>% t() %>% data.frame()
preds.psicomm.mean[(r*npred-npred+1):(r*npred)] <- apply(preds.psicomm.city, c(2), function(x)   mean(x, na.rm=TRUE))    # posterior mean
preds.psicomm.2.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,1]
preds.psicomm.med[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,2]
preds.psicomm.97.5[(r*npred-npred+1):(r*npred)] <- preds.psicomm.cri[,3]
#print(data.reg$city[r])
print(city.num[r])
}
preds.urbAGE <- data.frame(
"impervious" = rep(seq(min(data.site$Impervious), max(data.site$Impervious), length.out = npred), nline),
"impervious_std" = rep(urban.pred, nline),
"city" = rep(c(city.num), each = npred),
#"AGE" = rep(data.reg$yrs_col, each = npred),
"AGE" = rep((pred.AGE*sd(data.reg$yrs_col)+mean(data.reg$yrs_col)), each = npred),
"psi_med" = preds.psicomm.med,
"psi_low95" = preds.psicomm.2.5,
"psi_upp95" = preds.psicomm.97.5
)
# Plot Relationships Across Regional EVI Gradient ====
data.plot <- preds.urbEVI
plot.evi <- ggplot(data = data.plot, aes(x = impervious, y = psi_med, group = city)) +
theme_bw() +
geom_smooth(aes(x = impervious, y = psi_med, group = city), color = "gray20", se = FALSE, lwd = 1.2)+
geom_smooth(aes(x = impervious, y = psi_med, group = city, color = EVI), se = FALSE)+
geom_ribbon(aes(x = impervious, y = psi_med, group = city, ymin = psi_low95, ymax = psi_upp95, fill = EVI),
alpha = 0.15) +
#gghighlight(city %in% c("safl", "phaz", "ioio"))+
scale_fill_distiller(palette = "BrBG", direction = 1)+
scale_color_distiller(palette = "BrBG", direction = 1)+
scale_y_continuous(labels = label_number(accuracy = 0.01)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,0.4))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Occupancy") +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt") )
plot.evi
range(data.plot$EVI)
ggsave("./figures/figure2a_urbanization_vs_occupancy_EVIcontrast.png",
plot.evi,
width = 4,
height = 4,
units = "in",
dpi = 300)
# Plot Relationships Across Regional MAT Gradient ====
data.plot <- preds.urbMAT
plot.mat <- ggplot(data = data.plot) +
theme_bw() +
geom_smooth(aes(x = impervious, y = psi_med, group = city), color = "gray20", se = FALSE, lwd = 1.2)+
geom_smooth(aes(x = impervious, y = psi_med, group = city, color = MAT), se = FALSE)+
geom_ribbon(aes(x = impervious, y = psi_med, group = city, ymin = psi_low95, ymax = psi_upp95, fill = MAT),
alpha = 0.15) +
#gghighlight(city %in% c("scut", "mela"))+
theme_bw() +
scale_fill_distiller(palette = "RdYlBu", direction = -1)+
scale_color_distiller(palette = "RdYlBu", direction = -1)+
scale_y_continuous(labels = label_number(accuracy = 0.01)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,0.4))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Occupancy")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")  #top, right, bottom, left
)
plot.mat
ggsave("./figures/figure2b_urbanization_vs_occupancy_MATcontrast.png",
plot.mat,
width = 4,
height = 4,
units = "in",
dpi = 300)
# Plot Relationships Across Regional URB Gradient ====
data.plot <- preds.urbURB
plot.urb <- ggplot(data = data.plot) +
theme_bw() +
geom_smooth(aes(x = impervious, y = psi_med, group = city), color = "gray20", se = FALSE, lwd = 1.2)+
geom_smooth(aes(x = impervious, y = psi_med, group = city, color = URB), se = FALSE)+
geom_ribbon(aes(x = impervious, y = psi_med, group = city, ymin = psi_low95, ymax = psi_upp95, fill = URB),
alpha = 0.15) +
#gghighlight(city %in% c("scut", "chil"))+
theme_bw() +
scale_fill_distiller(palette = "PuOr", direction = 1)+
scale_color_distiller(palette = "PuOr", direction = 1)+
scale_y_continuous(labels = label_number(accuracy = 0.01)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,0.4))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Occupancy")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")
)
plot.urb
ggsave("./figures/figure2c_urbanization_vs_occupancy_URBcontrast.png",
plot.urb,
width = 4,
height = 4,
units = "in",
dpi = 300)
# Plot Relationships Across Regional AGE Gradient ====
data.plot <- preds.urbAGE
plot.age <- ggplot(data = data.plot) +
theme_bw() +
geom_smooth(aes(x = impervious, y = psi_med, group = city), color = "gray20", se = FALSE, lwd = 1.2)+
geom_smooth(aes(x = impervious, y = psi_med, group = city, color = AGE), se = FALSE)+
geom_ribbon(aes(x = impervious, y = psi_med, group = city, ymin = psi_low95, ymax = psi_upp95, fill = AGE),
alpha = 0.15) +
#gghighlight(city %in% c("inin", "wide"))+
scale_fill_distiller(palette = "PRGn", direction = -1)+
scale_color_distiller(palette = "PRGn", direction = -1)+
scale_y_continuous(labels = label_number(accuracy = 0.01)) +
coord_cartesian(xlim=c(0, max(data.site$Impervious)), ylim=c(0,0.4))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Occupancy")  +
theme(axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 18),
axis.title.y = element_text(face = "bold", size = 18),
legend.position = "none",
legend.margin = margin(t = 5, r = 74, b = 5, l = 5, unit = "pt")
)
plot.age
range(data.plot$AGE)
ggsave("./figures/figure2d_urbanization_vs_occupancy_AGEcontrast.png",
plot.age,
width = 4,
height = 4,
units = "in",
dpi = 300)
